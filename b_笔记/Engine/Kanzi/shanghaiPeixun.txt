0.开场简介：
      碎片：
            QQ：
                 芬兰 RightWare 10年 发展史 技术支持
            毛天亮：
                  中科 
            ANTTI:
                  技术美术，芬兰
      整理：
            QQ的开场介绍：
                  背景：
                        公司：
                              RightWare：
                                    芬兰 技术公司 10年 发展史
                              中科创达：
                                    2016年收购
                        人物：
                              毛天亮：技术讲师
                              王瀚平：技术讲师
                              ANTTI：技术艺术家
                              QQ：技术讲师
                  产品：
                        向客户介绍产品的PPT
                        往期各大车厂案例
                  愿景：
                        让街上的每辆车都用kanzi系统

1.Studio
      碎片：
            插件模式
            config平台配置
            材质模式：
                  区别不大，只是初始区别不大
            Library
            异步加载 start Asynchronous load
            渲染：
                  顶点
                  片元
                  各种数学原理
                  cginc?
                  代码提示?
            绑定：
                  mvvm：
                        覆盖范围：
                              studio/api
                        studio：
                              小：冗余
                              大：大规模数据绑定
                              是否存在问题
                              评判上限：
                  路径：
                        @
                        #
            ANTTI:
                  合并fbx
                  shader + blender 实现仪表指针 和 仪表样式

            data Source
            Inverse Kinematistc
      整合：
            天亮：
                  软件整体架构：
                        MVVM

                  启动/创建：
                        启动模式：
                              如果要编写插件，用插件模式启动(手动配置插件模式比较麻烦)
                        材质模式：
                              区别不大，都可以在打开之后创建
                        启动配置：
                              在config文件夹下设置
                  面板：
                        Library：
                              存放所有工程所用的资产
                        Properties：
                              绑定与表达式的使用：
                                    # 对别名的引用
                                    @ 全局寻找
                                    . 自身
                                    / 路径
                              异步加载:
                                    start Asynchronous load

            瀚平：
                  渲染：
                        顶点
                        片元
                        包含 光栅化，法线，光照，材质... 的 各种数学算法
                        渲染管线的认识

            ANTTI:
                  shader + blender 实现仪表指针 和 仪表样式

      作业：
            1 右转向灯开关功能 
            2 大灯开关功能 
            3 补全左前车门点击开启动画 
            4 实现黑白车漆颜色切换
            5 车模异步加载

2.高级渲染
      碎片：
            瀚平+天亮：
                  PBR工程：
                        ref：
                              https://learnopengl-cn.github.io/07%20PBR/01%20Theory/
                        微平面：
                              小镜面
                        BRDF法则
                              normal图：
                                    rgb 代表 xyz 

                                    得到法线

                                    模型得到：切线

                                    法线 切线 叉积 得到 副法线
                              
                              ao
                              金属度
                              清漆
                        RenderPass

                                    深度修改

                        msaa
                                    性能好

                        ssaa
                                    放大后缩小 实现 抗锯齿

                        高斯模糊
                                    图像卷积，正态分布，9点权重分布

                        光照模型：
                                    点积

                        shader序列帧动画：

            qq：
                  VFX：
                        噪点算法 Noise
                              1维噪点-3维噪点:
                                    1维：
                                          基准线
                                    2维：
                                          点积 得到 
                                          -1~1之间
                              value NOise ;
                              Gradient Noise：
                                    带有插值
                                    导数在边缘处衔接
                                    下一个变化的趋势
                              Perline Noise
                                    权重在线上
                              simplex noise
                                    用三角形 映射
                                    权重在三角上 
                                    高度贴图
                        极光示例：
                        点阵示例
            ANTTI:
                  ADAS:
                        渐变公路
                              顶点控制
                              节点暴露
                        灯光mesh：
                              RenderPass：
                                    关闭深度写入
                                    模糊渲染管线
                                    根据视线方向调整阴影
                                    Fresnel reflection
                        水纹理：
                              顶点：高度图位移 +
                              片元：Fresnel reflection

                        


      整合：

3.工程代码
      碎片：
            C++接口,
            反射 
                  module：
                        app
                        plugin
            创建
            编译：
                  其他平台：
                        芬兰编译库
                  加载时间：
                        onConfigure - onProjectLoaded 之间的时间
            重力感应：
                  画面片
                  贝塞尔曲线
            多语言翻译：
                  多语言表
            问：
                  合工程：
                        可以删除共同引用部分merge
            两个插件：
                  插件：
                        属性插件
                        节点插件
                        插件案例：持续++：
                              应用：
                                    3d旋转
                                    2d文字滚动
            骨骼动画：
                  导入模型
                        填写材质骨骼
                  导入动画
                        填写材质骨骼
                  优化：
                        关键帧
                        动画挂载，一个prefab加载一个动画(否则一下加载过多动画节点)
                  RenderPass回顾：
                        GroupRenderPass：
                              Com Target render Pass：msaa
                                    Claer Render Pass
                                    Draw Object
                              BiltRenderPass: 拖到ComTarget Render Pass
                  畸变：
                        枕型
                        桶型

                  解码器：
                        渲染纹理
            安卓环境编译
      整合：
      作业：
       骨骼导入

4.优化
      碎片：
            qq回顾：
            QQ优化：
                  kanzi的开放性
                  renderPip
                  kzb各个平台的中转中心
                  优化标准：
                        CPU:
                              代码 onconfig - onload
                              读写
                                    清空 on reference item
                                    移除不需要编译的
                              memory Mapping
                              异步加载
                              processing data:
                                    PNG to 压缩解码格式 to RAW（二进制数据）GPU 直接读取
                                    kzb 导出 streaming texture 寻找平衡点：文件大小 和 读取时间
                              Split KZB：
                                    分割kzb
                              字体：
                                    嵌入工程
                                    缩放动画：
                                          2d to 3d projection scale
                              
                              
                        GPU:
                              第一帧显示时间

                              材质加载

                              DeepthClear Enable

                              shaderCache：
                                    当shader很重的时候，外部读取shader（getProgrammLib.cpp）

                              合并面：
                                    batch：
                                     越少越快 50以下
                                     少用材质球：
                                          用少的shader
                                          用少的mesh

                              贴图和材质：
                                    合并成一个

                              硬件低端-高端：
                                    5w/10w/25w

                              特效：
                                    尽量少用mesh

                              关闭深度写入：
                                    Depth Clear Enabled

                              减少重复渲染：
                                    RenderPass
                              
                              抗锯齿：
                                    Fsaa
                                    msaa
                                    fxaa
                                    fake：
                                          模糊替代
                                          顶点色模糊

                        工具：
                              应用程序配置参考
                              优化工具：
                                    profing 性能测试工具：
                                          谷歌，浏览器打开目录下的json
                              shader预编译：
                                    实时更新Cubmap

            问题：
                  子工程 kzb Preview 的相对路径 绝对路径
            作业：
                  可视化启动时间方法：
                        hpp cpp 存放src路径下
                        导入 hpp cpp
                        导入hpp插入代码，填写测试时间如：profiling_helper::setupDumpTimer(this, 15000, getStartupProfilerRegistry());
                        在Profilling模式下编译
                        用python合并两个json
                        生成的profiling 在谷歌浏览器-调试-performance 显示 加载速度结果

5.测试HMI
      碎片：
            测试：
                  KanziConnect 独立于 studio api
                        H5到Kanzi
                        架构：
                              service
                                    server
                                          客户0
                                          客户1
                                          客户2
                                    Media
                                    weather
                                    ...
                        通信协议：
                              tcpIp 蓝牙 ...
                        bat启动程序：
                              暂时设置环境变量启动程序
                  粒子系统：
                        渲染节点
                              发射器
                              影响器

                  地图插件：
                        web墨卡托投影
                        mapBox+插件：
                              

6.插件



