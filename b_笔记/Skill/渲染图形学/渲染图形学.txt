3D:
      计算着色器:
            以unity为例：
                  允许用户申请GPU线程进行开发。
      几何着色器：
            以图元（通常是三角形）为单位进行操作
      顶点
            输入项：
                  物体位置(Position)
                  法线位置(Normal)
                  切线位置(Tangent)
                  权重(weight)
                  矩阵索引(matrix indices)
                  贴图坐标(texture coordinates)
                  顶点色(vertex color)
                  融合 位置 法线 切线 (MorphTarget)
            公共项：
                  贴图采样(sampler texture)
                  不透明度(Opacity)
                  世界矩阵(worldMatrix)
                  相机矩阵(cameraMatrix)
                  相机转世界矩阵(worldCameraMatrix)
                  投影到相机矩阵(ProjectionCameraWorldMatrix)
                  投影矩阵(ProjectionMatrix)
                  法线矩阵(NormalMatrix)
                  相机法线矩阵(CameraNormalMatrix)
                  相机位置(CameraPosition)
                  时间(Time)
                  贴图大小(TextureSize)
                  矩阵调色板(matrix Paletter)?
                  相机距离(cameraNearFarPlane)
                  融合权重(MorphWeight)
                  视口坐标(viewPort)v4
                  窗口坐标(window)v2
            传递属性：
                  varying
      片元:
            所有公共项
            传递属性：
                  varying

      后处理：
      缓存：
2D:
      图形绘制：
            在片元中以UV为xy为坐标象限进行绘制
      图片格式：
            通用格式:
                  PNG: Portable Network Graphics 便携式网络图形
                        首选格式，将产生最高质量的全彩色图形图像。
                  PNG8:
                        这是一个每像素 8 位的 PNG，支持单色透明度。这些文件通常比全彩色 PNG 小，但颜色会更少（最多 256 种）。SiteSpinner™ 在预览或发布项目时为每个 PNG 8 对象选择最佳颜色集，因此它通常看起来与全彩色 PNG 一样好，但并非总是如此。例如，渐变或照片可能看起来是带状的。
                  GIF:
                        GIF 应该和 PNG8 一样工作。不过透明算法有所不同。所以大小会有别于 PNG8 的序列图片大小。
                  JPG:
                        最适合摄影图像。 将使用全彩色但不透明导出。可以控制图片输出质量（与大小正相关）。
                  JPEG：Joint Photography Experts Group 
                        于1992年首次推出，
                        在压缩过程中，像素与周围的其他像素以 2:1 到 100:1 的比例进行比较。因此，所有与原始像素相同的像素都被删除。
                        早期为了节省一个字节所以采用JPG的缩写。
                  BMP：
                        未压缩的位图格式。 将生成矢量几何的全彩 BMP 图像。 不建议在网页上使用 BMP，因为它的文件非常大，而且许多浏览器不支持它。 如果您希望使用第三方图像程序将图像转换为另一种格式，则导出为 BMP 格式可能会很有用

            compressed format 格式：
                  ASTC: Adaptive scalable texture compression 自适应可缩放纹理压缩
                       是由 Jørn Nystad 等人开发的一种有损基于块的纹理压缩 算法。会增加体积大小但是减少显存大小
                       ASTC 于2012 年 8 月 6 日被Khronos Group采用为OpenGL和OpenGL ES的官方扩展。
                       支持算法的硬件：
                        apple GPU (LDR only),Arm Mali,Imagination PowerVR,Intel GPUs,Nvidia Tegra,Qualcomm Adreno (LDR only)
                        多样性：
                              ASTC 的主要设计目标是使内容开发人员能够更好地控制任何有损压缩方案中固有的空间/质量权衡。使用 ASTC，相邻比特率之间的比率约为 25%，从而降低了为给定纹理提高质量的成本。编码不同的资产通常需要不同的颜色格式。ASTC 允许多种输入格式选择，包括仅亮度、亮度 alpha、RGB、RGBA 和针对表面法线优化的模式。因此，设计人员可以选择最佳格式，而无需支持多种不同的压缩方案。比特率和颜色格式的选择不会相互制约，因此可以从大量的组合中进行选择。
                              以unity为例：https://developer.arm.com/documentation/102162/0002/Unity-and-ASTC
                  ATC: 
                        WebGL API的一部分，并公开了 3 种 ATC 压缩纹理格式。ATC 是一种专有的压缩算法，用于在手持设备上压缩纹理。压缩纹理减少了在 GPU 上存储纹理所需的内存量，从而允许更高分辨率的纹理或更多相同分辨率的纹理。
                  ETC编码: Ericsson Texture Compression
                        WebGL API的一部分， ETC 是一种基于块的纹理压缩格式。图像被分成 4x4 块，每个块使用固定数量的比特进行编码。在 ETC1 格式（用于压缩 RGB 图像）的情况下，每个块使用 64 位编码。前 32 位包含有关 4x4 块中使用的颜色的信息。每个 4x4 块被垂直或水平分成两个 2x4 或 4x2 子块（每个块的方向由“翻转”位控制）。每个子块都分配有自己的基色和自己的修饰符表索引。需要保存三张图来合成一张图,基色+块方向+修改表索引+选择器 = 解码后的图
                        ETC1代是不支持alpha的，ETC2是支持alpha的。
                  Native(Uncompressed):
                        本机图片未经过压缩。
                  PVRTC(PowerVR Texture Compression):
                        压缩图像由两个较低分辨率的图像表示，这些图像被双线性放大，然后根据低精度、每像素权重进行混合。所以不适合像素风格的图片
                  Raw:
                        原图片未经过压缩。
                  

            ref:
                  https://www.sitespinner.com/support/sswebhelp/imagetargetformats.htm


渲染管线：
      大型状态机：
            Blit Render Pass:
                  位块传送渲染通道
                  使用某种特定材质在屏幕上位块传送一个或多个渲染通道或纹理。
            Clear Render Pass:
                  清除当前渲染上下文的部分或全部缓冲。您可以设置 Kanzi 清除颜色、深度和模具缓冲区的值。
            Composition Target Render Pass:
                  将自身及其子渲染通道渲染成合成目标。
            Draw Objects Render Pass:
                  允许您设置摄像机 (Camera) 节点来渲染特定对象源并控制视锥体剔除。
            Draw Objects With Material Render Pass:
            Group Render Pass:
            Lagacy Render Pass (deprecated):
                  一个封装好的渲染管线
            Material Setup Render Pass:
            Pipline State Render Pass:



特殊操作：
      toneMap：（减少过曝）
            https://zhuanlan.zhihu.com/p/21983679
      模糊算法、景深：（变焦）
            https://zhuanlan.zhihu.com/p/125744132
      PS操作：
            https://zhuanlan.zhihu.com/p/108820522

动画：
      面部表情：
            避免表情僵硬 或者 作为UE参考用户心理的测量工具：FACS方案（Facial Action Coding System）


ref:
      FORTICHE 法国