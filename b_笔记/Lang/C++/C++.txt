语言目的：
      封装与重用，可以快速做大型程序的开发

学习网址：
      https://github.com/Light-City/CPlusPlusThings
      笔记：
            const：     
                  不能被修改的值，为了增加代码健壮性
                  首次声明前面加：extern，之后就不能修改了
                  不变类型：
                        char const* a;
                  或者不变常量：
                        char* const a;
            static:
                  可以优化程序，多次调用，空间只分配一次，分配在生命周期内
                  静态变量：可以是变量:每次调用不会被初始化
                  静态成员：可以是调用类：贯穿整个生命周期(一个生命周期调用一次)
            this指针：
                  this代表当前类的内部
            inline:
                  内联函数，就是通过头文件就能访问/调用，代码长或者循环 不宜内联
            sizeof:
                  计算占用存储空间的
            ::
                  作用域 全局，类，命名空间
            ->
                  访问成员 语法糖
            &
                  获取变量的地址
            *
                  带有地址的变量：
                        int  var = 20;
                        int  *ip;  

                        ip = &var;

                        var 的值：20
                        ip 的值：0xbfc601ac
                        *ip 的值： 20
            
            占位符：
                  先以一个类型占个位置
            虚函数与抽象类
关键字：
      const：     
                  不能被修改的值，为了增加代码健壮性
                  首次声明前面加：extern，之后就不能修改了
                  不变类型：
                        char const* a;
                  或者不变常量：
                        char* const a;
      static:
                  可以优化程序，多次调用，空间只分配一次，分配在生命周期内
                  静态变量：可以是变量:每次调用不会被初始化
                  静态成员：可以是调用类：贯穿整个生命周期(一个生命周期调用一次)
      this指针：
                  this代表当前类的内部
      inline:
                  内联函数，就是通过头文件就能访问/调用，代码长或者循环 不宜内联
      sizeof:
                  计算占用存储空间的
      explicit:
                  只能显示转化


标识符：
      &:
            返回值的地址
      *：
            返回地址的值
      ~:
            取相反数
      ::
            作用域 全局，类，命名空间
      ->
            访问成员 语法糖
概念：
      显式 隐式：
            计算机是否默认转换

      构造函数：
            设置初始值

      GC:
            无效内存释放系统
            C语言本身没有提供GC机制，而C++ 0x则提供了基于引用计数算法的智能指针进行内存管理。也有一些不作为C++标准的垃圾回收库，如著名的Boehm库。

      数据结构：
            链表：
                  便于增删改查
      
      任务调度：

      
      

