openGL（GLSL,OpenGL Shading Language）:
  概念：
    用于渲染2D、3D矢量图形的跨语言、跨平台的应用程序编程接口（API）
    需要选择一门语言来调用，多数使用C++
  数学：
    线性代数
    几何
    三角学
  命名：
    接口：
      给予开发公司命名标识符：
        例如：
          NVIDIA:NV
      多个供应商认同：
        EXT
      标准拓展：
        ARB
  在线：
    https://shdr.bkcore.com/
  教程：
    2d：
      https://www.udemy.com/course/making-glsl-shaders-for-2d-game-development/
      13美元
      https://youtu.be/NQ-g6v7GtoI
    全栈：
      https://learnopengl.com/Introduction
      进度：
        入门-openGL
      笔记：
        入门：
          OpenGL：
            其他：
              OpenGL仅仅是一个规范
              OpenGL库由显卡制造商编写
              当 OpenGL 显示出它不应该出现的奇怪行为时，这很可能是显卡制造商（或开发/维护库的人）的错。
              OpenGL规范文档:
                https://www.khronos.org/registry/OpenGL/specs/gl/glspec33.core.pdf
              使用最新版本的 OpenGL 的功能时，只有最现代的显卡才能运行您的应用程序。
            扩展
              开发人员可以直接拓展opengl
            状态机
               OpenGL 本身就是一个大型状态机 ！
               OpenGL的状态 通常被称为OpenGL语境.
            对象
              OpenGL 库是用 C 编写的，并允许在其他语言中进行许多派生，但它的核心仍然是一个 C 库。

          创建一个窗口：
            


            
  其他：
    二进制着色器:
      为了反复读取代码，在编译一次后产生的二进制文件保存，下次直接读取二进制着色器
  mac：
    vscode环境配置:
      https://zhuanlan.zhihu.com/p/151384233
   
openGL ES(OpenGL for Embedded Systems ):
    概念：
      openGL的子集，专门用于嵌入式设备
    版本及功能：
      1.0=
        四边形和多边形渲染基元
        texgen，线和多边形点画
        多重采样
      +=1.1
        支持多纹理
        支持mipmap（lod）
        顶点缓冲区
        状态查询
        用户剪辑平面
        点渲染
      +=2.0
        可编程的渲染管道
      +=3.0
        渲染管道的多项增强功能可加速高级视觉效果
        ETC2/EAC 纹理压缩 统一平台纹理集
        支持整数和32 位 浮点运算
        支持更多纹理：浮点纹理、3D 纹理、深度纹理、顶点纹理、NPOT 纹理、R/RG 纹理、不可变纹理、2D 阵列纹理、swizzles、LOD和mip 级别钳位、无缝立方体贴图和采样器对象
        纹理和渲染缓冲区格式确定
      +=3.1
        计算着色器 为了 cpu gpu 更紧密合作
        独立的顶点和片段着色器
        间接绘制命令
      +=3.2
        几何和曲面细分着色器可在 GPU 上高效处理复杂场景
        浮点渲染目标可提高更高精度计算操作的灵活性
        ASTC 压缩以减少用于处理纹理的内存占用和带宽
        用于复杂合成和处理多种颜色附件的增强混合
        高级纹理目标，例如纹理缓冲区、多样本二维数组和立方体贴图数组
        调试和健壮性功能可实现更轻松的代码开发和安全执行。
      